"use strict";function AddRoll(a,b,c,d){var e=this;this.rolls=[],this.add=function(a,b,c,d){e.rolls.push(new AddRoll(a,b,c,d))},this.title=d||"Title",this.number=a||1,this.sizeOfDice=b||6,this.addValue=c||0,this.__type__="AddRoll",this.rollDice=function(a){for(var b=a||this,c=0,d=[],e=0;e<b.number;e++){var f=Math.floor(Math.random()*b.sizeOfDice)+1;c+=f,d.push(f)}return b.results=d,b.result=c+b.addValue,b},this.remove=function(a){e.rolls.splice(a,1)},this.get=function(a){return e.rolls[a]},this.print=function(){console.log(e.serialize())},this.serialize=function(){return JSON.stringify(e.rolls)},this.deserialize=function(a){var b=function(a,b){return b.hasOwnProperty("__type__")&&"AddRoll"===b.__type__?new AddRoll(b.number,b.sizeOfDice,b.addValue,b.title):b};return e.rolls=JSON.parse(a,b),e.rolls},this.reset=function(){e.rolls=[]}}function Collapser(a){var b=this,c=a,d=!1,e=!1,f=!1;this.toggle=function(){return b.isHeld()?void 0:d=!d},this.isOpen=function(){return d===!0},this.isClosed=function(){return d===!1},this.close=function(){return b.isHeld()?void 0:d=!1},this.open=function(){b.isHeld()||(d=!0)},this.hold=function(){return e=!0},this.release=function(){return e=!1},this.isHeld=function(){return e===!0},this.holdToggle=function(){return e=!e},this.over=function(){return f=!0},this.notOver=function(){return f=!1},this.isOver=function(){return f===!0},this.overToggle=function(){return f=!f},this.name=function(a){return a&&(c=a),c}}function CollapseProvider(){var a={},b=this;b.hash=a,this.add=function(b){if(!b)return!1;var c=new Collapser(b);return a[b]=c,c},this.remove=function(b){return delete a[b]},this.get=function(b){return a[b]},this.exists=function(b){return b?a.hasOwnProperty(b):!1},this._every=function(b,c){return b?(c?Object.keys(a).filter(function(a){return a!==c}).forEach(function(c){a[c][b]()}):Object.keys(a).forEach(function(c){a[c][b]()}),!0):!1},this.releaseExcept=function(a){return b._every("release",a)},this.holdExcept=function(a){return b._every("hold",a)},this.closeExcept=function(a){return b._every("close",a)},this.openExcept=function(a){return b._every("open",a)},this.turnOn=function(a){return b.exists(a)?(b.closeExcept(),b.get(a).open(),!0):!1},this.turnOff=function(a){return b.exists(a)?(b.openExcept(),b.get(a).close(),!0):!1},this.reset=function(){a={}},this.nameChange=function(c,d){var e=b.get(c);return e?(e.name(d),b.remove(c),a[d]=e,e):!1}}var learning=angular.module("learningApp",["ngRoute","ngSanitize","controllers","ngTouch","services","Collapse"]);learning.config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("controllers",["LocalStorageModule","ui.bootstrap","ngMaterial"]),angular.module("controllers").controller("MainCtrl",["$scope","Roll","localStorageService",function(a,b,c){a.reset=function(){c.remove("rolls"),b.reset(),b.add(2,8,1,"Example: 2d8+1")};var d=c.get("rolls");d&&b.deserialize(JSON.stringify(d)),(!angular.isArray(b.rolls)||b.rolls.length<1)&&a.reset(),a.Roll=b,a.rolls=b.rolls,a.update=function(){c.set("rolls",b.serialize())},a.$watch("rolls",a.update,!0),a.addCollapse=!0,a.AddRolls=[{label:"Roller Title","class":!1,id:"title",model:"setTitle",placeholder:"Title",type:"text"},{label:"Number of Dice","class":!1,id:"numberOfDice",model:"numDice",placeholder:"1",type:"number"},{label:"Size of Die","class":!1,id:"sizeOfDie",model:"sizeOfDie",placeholder:"6",type:"number"},{label:"Bonus / Penalty to Roll Result","class":!1,id:"amountToAdd",model:"amountToAdd",placeholder:"0",type:"number"}]}]);var services=angular.module("services",[]);services.factory("Roll",[function(){return new AddRoll}]);var collapse=angular.module("Collapse",[]);collapse.factory("CollapseProvider",function(){return new CollapseProvider});